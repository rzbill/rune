
service:
  name: rune-hello-world
  namespace: default
  labels:
    app: rune-hello-world
    type: web-service
    environment: development
  image: rune-hello-world:latest
  scale: 1
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: tcp
  expose:
    port: http
    host: localhost
    hostPort: 8080
  env:
    # Basic configuration
    PORT: "8080"
    HOST: "0.0.0.0"
    ENVIRONMENT: "development"
    VERSION: "1.0.0"
    LOG_LEVEL: {{ configmap:app-settings/log-level }}
    NAME: {{ configmap:app-settings.default.rune/name }}
    
    # Database configuration
    DATABASE_URL: "postgresql://localhost:5432/rune_hello_world"
    API_KEY: "demo-api-key-12345"
    DB_USERNAME: {{ secret:db-credentials/username }}
    DB_PASSWORD: {{ secret:db-credentials.default.rune/password }}
    
    # Feature flags and debugging
    DEBUG_MODE: "true"
    FEATURE_FLAGS: "basic,advanced,experimental"
    CUSTOM_MESSAGE: "Hello from Rune Hello World!"
    
    # Performance settings
    MAX_CONNECTIONS: "100"
    TIMEOUT_SECONDS: "30"
    
    # Additional environment variables for testing
    NODE_ENV: "development"
    APP_NAME: "rune-hello-world"
    BUILD_DATE: "2024-01-01"
    GIT_COMMIT: "abc123def456"
  
  secretMounts:
    - name: keypairs-secret
      mountPath: /etc/secrets/keypairs-secret

  resources:
    cpu:
      request: "100m"
      limit: "200m"
    memory:
      request: "128Mi"
      limit: "256Mi"
  dependencies:
    - log-generator
    
  #health:
  #  liveness:
  #    type: http
  #    path: /health
  #    port: 8080
  #    initialDelaySeconds: 5
  #    intervalSeconds: 10
  #    timeoutSeconds: 5
  #    failureThreshold: 3
  #    successThreshold: 1
  #  readiness:
  #    type: http
  #    path: /health
  #    port: 8080
  #    initialDelaySeconds: 5
  #    intervalSeconds: 10
  #    timeoutSeconds: 5
  #    failureThreshold: 3
  #    successThreshold: 1