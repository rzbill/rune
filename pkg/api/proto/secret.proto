syntax = "proto3";

package rune.api;

import "pkg/api/proto/common.proto";

option go_package = "github.com/rzbill/rune/pkg/api/generated";

message Secret {
  string name = 1;
  string namespace = 2;
  string type = 3; // "static" for MVP
  map<string, string> data = 4; // returned for now (MVP), secure transports assumed
  int32 version = 5;
  string created_at = 6;
  string updated_at = 7;
}

message CreateSecretRequest {
  Secret secret = 1;
  bool ensure_namespace = 2;
}

message GetSecretRequest {
  string name = 1;
  string namespace = 2;
}

message UpdateSecretRequest {
  Secret secret = 1;
}

message DeleteSecretRequest {
  string name = 1;
  string namespace = 2;
}

message ListSecretsRequest {
  string namespace = 1;

  // Filter services by label
  map<string, string> label_selector = 2;

  // Filter services by field
  map<string, string> field_selector = 3;
  
  // Paging parameters
  PagingParams paging = 4;
}

message ListSecretsResponse {
  repeated Secret secrets = 1;
  Status status = 2;
}

message SecretResponse {
  Secret secret = 1;
  Status status = 2;
}

service SecretService {
  rpc CreateSecret(CreateSecretRequest) returns (SecretResponse);
  rpc GetSecret(GetSecretRequest) returns (SecretResponse);
  rpc UpdateSecret(UpdateSecretRequest) returns (SecretResponse);
  rpc DeleteSecret(DeleteSecretRequest) returns (Status);
  rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse);
}


