// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.3
// source: pkg/api/proto/health.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HealthStatus represents the health status of a component.
type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED HealthStatus = 0
	HealthStatus_HEALTH_STATUS_UNKNOWN     HealthStatus = 1 // Status is unknown
	HealthStatus_HEALTH_STATUS_HEALTHY     HealthStatus = 2 // Healthy and functioning correctly
	HealthStatus_HEALTH_STATUS_UNHEALTHY   HealthStatus = 3 // Unhealthy and not functioning correctly
	HealthStatus_HEALTH_STATUS_DEGRADED    HealthStatus = 4 // Functioning but with reduced capabilities
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTH_STATUS_UNKNOWN",
		2: "HEALTH_STATUS_HEALTHY",
		3: "HEALTH_STATUS_UNHEALTHY",
		4: "HEALTH_STATUS_DEGRADED",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED": 0,
		"HEALTH_STATUS_UNKNOWN":     1,
		"HEALTH_STATUS_HEALTHY":     2,
		"HEALTH_STATUS_UNHEALTHY":   3,
		"HEALTH_STATUS_DEGRADED":    4,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_health_proto_enumTypes[0].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_health_proto_enumTypes[0]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{0}
}

// HealthCheckType defines different types of health checks.
type HealthCheckType int32

const (
	HealthCheckType_HEALTH_CHECK_TYPE_UNSPECIFIED HealthCheckType = 0
	HealthCheckType_HEALTH_CHECK_TYPE_LIVENESS    HealthCheckType = 1 // Basic liveness check
	HealthCheckType_HEALTH_CHECK_TYPE_READINESS   HealthCheckType = 2 // Readiness to receive traffic
	HealthCheckType_HEALTH_CHECK_TYPE_STARTUP     HealthCheckType = 3 // Initialization check
)

// Enum value maps for HealthCheckType.
var (
	HealthCheckType_name = map[int32]string{
		0: "HEALTH_CHECK_TYPE_UNSPECIFIED",
		1: "HEALTH_CHECK_TYPE_LIVENESS",
		2: "HEALTH_CHECK_TYPE_READINESS",
		3: "HEALTH_CHECK_TYPE_STARTUP",
	}
	HealthCheckType_value = map[string]int32{
		"HEALTH_CHECK_TYPE_UNSPECIFIED": 0,
		"HEALTH_CHECK_TYPE_LIVENESS":    1,
		"HEALTH_CHECK_TYPE_READINESS":   2,
		"HEALTH_CHECK_TYPE_STARTUP":     3,
	}
)

func (x HealthCheckType) Enum() *HealthCheckType {
	p := new(HealthCheckType)
	*p = x
	return p
}

func (x HealthCheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_health_proto_enumTypes[1].Descriptor()
}

func (HealthCheckType) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_health_proto_enumTypes[1]
}

func (x HealthCheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckType.Descriptor instead.
func (HealthCheckType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{1}
}

// HealthCheckResult represents the result of a health check.
type HealthCheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of health check
	Type HealthCheckType `protobuf:"varint,1,opt,name=type,proto3,enum=rune.api.HealthCheckType" json:"type,omitempty"`
	// Status of the check
	Status HealthStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rune.api.HealthStatus" json:"status,omitempty"`
	// Detailed message about the health status
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Last check timestamp (RFC 3339 format)
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Consecutive successes
	ConsecutiveSuccesses int32 `protobuf:"varint,5,opt,name=consecutive_successes,json=consecutiveSuccesses,proto3" json:"consecutive_successes,omitempty"`
	// Consecutive failures
	ConsecutiveFailures int32 `protobuf:"varint,6,opt,name=consecutive_failures,json=consecutiveFailures,proto3" json:"consecutive_failures,omitempty"`
}

func (x *HealthCheckResult) Reset() {
	*x = HealthCheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_health_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResult) ProtoMessage() {}

func (x *HealthCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_health_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResult.ProtoReflect.Descriptor instead.
func (*HealthCheckResult) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckResult) GetType() HealthCheckType {
	if x != nil {
		return x.Type
	}
	return HealthCheckType_HEALTH_CHECK_TYPE_UNSPECIFIED
}

func (x *HealthCheckResult) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *HealthCheckResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResult) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *HealthCheckResult) GetConsecutiveSuccesses() int32 {
	if x != nil {
		return x.ConsecutiveSuccesses
	}
	return 0
}

func (x *HealthCheckResult) GetConsecutiveFailures() int32 {
	if x != nil {
		return x.ConsecutiveFailures
	}
	return 0
}

// ComponentHealth represents the health status of a component.
type ComponentHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Component type (e.g., "service", "instance", "node", "api-server")
	ComponentType string `protobuf:"bytes,1,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	// Component identifier
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the component
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace of the component (if applicable)
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Overall health status
	Status HealthStatus `protobuf:"varint,5,opt,name=status,proto3,enum=rune.api.HealthStatus" json:"status,omitempty"`
	// Detailed message about the health status
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	// Last update timestamp (RFC 3339 format)
	Timestamp string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Individual health check results
	CheckResults []*HealthCheckResult `protobuf:"bytes,8,rep,name=check_results,json=checkResults,proto3" json:"check_results,omitempty"`
}

func (x *ComponentHealth) Reset() {
	*x = ComponentHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_health_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentHealth) ProtoMessage() {}

func (x *ComponentHealth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_health_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentHealth.ProtoReflect.Descriptor instead.
func (*ComponentHealth) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentHealth) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ComponentHealth) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentHealth) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentHealth) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ComponentHealth) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *ComponentHealth) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ComponentHealth) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ComponentHealth) GetCheckResults() []*HealthCheckResult {
	if x != nil {
		return x.CheckResults
	}
	return nil
}

// GetHealthRequest requests health information.
type GetHealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Component type to check (e.g., "service", "instance", "node", "api-server")
	ComponentType string `protobuf:"bytes,1,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	// Component name to check (optional)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace of the component (if applicable)
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Include detailed check results
	IncludeChecks bool `protobuf:"varint,4,opt,name=include_checks,json=includeChecks,proto3" json:"include_checks,omitempty"`
}

func (x *GetHealthRequest) Reset() {
	*x = GetHealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_health_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRequest) ProtoMessage() {}

func (x *GetHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_health_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRequest.ProtoReflect.Descriptor instead.
func (*GetHealthRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{2}
}

func (x *GetHealthRequest) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *GetHealthRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetHealthRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetHealthRequest) GetIncludeChecks() bool {
	if x != nil {
		return x.IncludeChecks
	}
	return false
}

// GetHealthResponse returns health information.
type GetHealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Health information of the requested components
	Components []*ComponentHealth `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
	// Status message
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetHealthResponse) Reset() {
	*x = GetHealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_health_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResponse) ProtoMessage() {}

func (x *GetHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_health_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResponse.ProtoReflect.Descriptor instead.
func (*GetHealthResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_health_proto_rawDescGZIP(), []int{3}
}

func (x *GetHealthResponse) GetComponents() []*ComponentHealth {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GetHealthResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_pkg_api_proto_health_proto protoreflect.FileDescriptor

var file_pkg_api_proto_health_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x75,
	0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x40, 0x0a, 0x0d,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x22, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x9c, 0x01,
	0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x19, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x45, 0x41, 0x4c,
	0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x03,
	0x12, 0x1a, 0x0a, 0x16, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x94, 0x01, 0x0a,
	0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x1d, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x4e, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x49, 0x4e, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x55,
	0x50, 0x10, 0x03, 0x32, 0x55, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x1a, 0x2e, 0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x75, 0x6e, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x7a, 0x62, 0x69, 0x6c, 0x6c, 0x2f,
	0x72, 0x75, 0x6e, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_proto_health_proto_rawDescOnce sync.Once
	file_pkg_api_proto_health_proto_rawDescData = file_pkg_api_proto_health_proto_rawDesc
)

func file_pkg_api_proto_health_proto_rawDescGZIP() []byte {
	file_pkg_api_proto_health_proto_rawDescOnce.Do(func() {
		file_pkg_api_proto_health_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_proto_health_proto_rawDescData)
	})
	return file_pkg_api_proto_health_proto_rawDescData
}

var file_pkg_api_proto_health_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_api_proto_health_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_api_proto_health_proto_goTypes = []interface{}{
	(HealthStatus)(0),         // 0: rune.api.HealthStatus
	(HealthCheckType)(0),      // 1: rune.api.HealthCheckType
	(*HealthCheckResult)(nil), // 2: rune.api.HealthCheckResult
	(*ComponentHealth)(nil),   // 3: rune.api.ComponentHealth
	(*GetHealthRequest)(nil),  // 4: rune.api.GetHealthRequest
	(*GetHealthResponse)(nil), // 5: rune.api.GetHealthResponse
	(*Status)(nil),            // 6: rune.api.Status
}
var file_pkg_api_proto_health_proto_depIdxs = []int32{
	1, // 0: rune.api.HealthCheckResult.type:type_name -> rune.api.HealthCheckType
	0, // 1: rune.api.HealthCheckResult.status:type_name -> rune.api.HealthStatus
	0, // 2: rune.api.ComponentHealth.status:type_name -> rune.api.HealthStatus
	2, // 3: rune.api.ComponentHealth.check_results:type_name -> rune.api.HealthCheckResult
	3, // 4: rune.api.GetHealthResponse.components:type_name -> rune.api.ComponentHealth
	6, // 5: rune.api.GetHealthResponse.status:type_name -> rune.api.Status
	4, // 6: rune.api.HealthService.GetHealth:input_type -> rune.api.GetHealthRequest
	5, // 7: rune.api.HealthService.GetHealth:output_type -> rune.api.GetHealthResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_api_proto_health_proto_init() }
func file_pkg_api_proto_health_proto_init() {
	if File_pkg_api_proto_health_proto != nil {
		return
	}
	file_pkg_api_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_proto_health_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_health_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_health_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_health_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_proto_health_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_proto_health_proto_goTypes,
		DependencyIndexes: file_pkg_api_proto_health_proto_depIdxs,
		EnumInfos:         file_pkg_api_proto_health_proto_enumTypes,
		MessageInfos:      file_pkg_api_proto_health_proto_msgTypes,
	}.Build()
	File_pkg_api_proto_health_proto = out.File
	file_pkg_api_proto_health_proto_rawDesc = nil
	file_pkg_api_proto_health_proto_goTypes = nil
	file_pkg_api_proto_health_proto_depIdxs = nil
}
